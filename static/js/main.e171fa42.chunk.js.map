{"version":3,"sources":["components/logo.svg","components/Header.js","components/MessageDisplayList.js","components/MessageInputArea.js","components/MessageArea.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","useDropdownMenu","buttonProps","isOpen","className","src","logo","alt","icon","faEllipsisV","role","href","onClick","changeColorMode","value","colorMode","onToggle","MessageDisplayList","messageList","map","message","msgSentFromLoggedInUser","msgLoggedInUser","text","id","MessageInputArea","onSubmit","e","submitMessageForm","type","onChange","setMessages","target","faPaperPlane","MessageArea","useState","setMessageList","preventDefault","trim","createdOn","Date","toString","length","App","state","isLightMode","bind","this","setState","prevState","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e171fa42.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.d0f1ae30.svg\";","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons\";\r\nimport useDropdownMenu from \"react-accessible-dropdown-menu-hook\";\r\nimport ToggleButton from \"react-toggle-button\";\r\nimport logo from \"./logo.svg\";\r\n\r\nexport default function Header(props) {\r\n  const { buttonProps, isOpen } = useDropdownMenu(2);\r\n  return (\r\n    <div className=\"header-container\">\r\n      <div className=\"header-title\">\r\n        <img src={logo} alt=\"App logo\" />\r\n      </div>\r\n\r\n      <button {...buttonProps} className=\"header-menu header-btn\">\r\n        <FontAwesomeIcon icon={faEllipsisV} />\r\n      </button>\r\n      <div className={isOpen ? \"visible\" : \"\"} role=\"menu\">\r\n        <a href=\"#\" onClick={() => props.changeColorMode()}>\r\n          Dark Mode\r\n          <div className=\"menuoption\">\r\n            <ToggleButton\r\n              value={props.colorMode}\r\n              onToggle={() => props.changeColorMode()}\r\n            />\r\n          </div>\r\n        </a>\r\n        <div className=\"divider\"></div>\r\n        <a href=\"#\">Switch User</a>\r\n        <a href=\"#\" onClick={() => props.changeColorMode()}>\r\n          Sign Out\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function MessageDisplayList(props) {\r\n  const { messageList } = props;\r\n  return (\r\n    <div className=\"chatarea-container\">\r\n      {messageList.map((message) => {\r\n        let msgSentFromLoggedInUser = message.msgLoggedInUser\r\n          ? \"sent\"\r\n          : \"received\";\r\n        return (\r\n          <div\r\n            className={`textdisplay ${msgSentFromLoggedInUser}`}\r\n            key={message.id}\r\n          >\r\n            <img className=\"userimg\" alt=\"User face\"></img>\r\n            <p>{message.text}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function MessageInputArea(props) {\r\n  return (\r\n    <form onSubmit={(e) => props.submitMessageForm(e)}>\r\n      <input\r\n        type=\"text\"\r\n        value={props.message || \"\"}\r\n        className=\"input\"\r\n        onChange={(e) => props.setMessages(e.target.value)}\r\n      />\r\n      <button className=\"sendmsg-btn\" type=\"submit\">\r\n        <FontAwesomeIcon icon={faPaperPlane} />\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport MessageDisplayList from \"./MessageDisplayList\";\r\nimport MessageInputArea from \"./MessageInputArea\";\r\n\r\nexport default function MessageArea() {\r\n  const messageTempList = [\r\n    { text: \"hello\", id: 1, msgLoggedInUser: false },\r\n    { text: \"hi\", id: 2, msgLoggedInUser: false },\r\n  ];\r\n  const [message, setMessages] = useState(\"\");\r\n  const [messageList, setMessageList] = useState(messageTempList);\r\n\r\n  const submitMessageForm = (e) => {\r\n    e.preventDefault();\r\n    if (message.trim()) {\r\n      setMessageList([\r\n        ...messageList,\r\n        {\r\n          text: message,\r\n          msgLoggedInUser: true,\r\n          createdOn: new Date().toString(),\r\n          id: messageList.length + 1,\r\n        },\r\n      ]);\r\n      setMessages(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"messagearea-container\">\r\n      <MessageDisplayList messageList={messageList} />\r\n      <MessageInputArea\r\n        setMessages={setMessages}\r\n        submitMessageForm={submitMessageForm}\r\n        message={message}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport MessageArea from \"./components/MessageArea\";\r\nimport React from \"react\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLightMode: false,\r\n      messageList: [],\r\n    };\r\n    this.changeColorMode = this.changeColorMode.bind(this);\r\n  }\r\n\r\n  changeColorMode() {\r\n    this.setState((prevState) => {\r\n      return { isLightMode: !prevState.isLightMode };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const colorMode = this.state.isLightMode ? \"lightmode\" : \"darkmode\";\r\n    return (\r\n      <div className={`app-container ${colorMode}`}>\r\n        <div className=\"main-container\">\r\n          <Header\r\n            changeColorMode={this.changeColorMode}\r\n            colorMode={!this.state.isLightMode}\r\n          />\r\n          <MessageArea />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}